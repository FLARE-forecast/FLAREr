[{"path":"http://flare-forecast.org/FLAREr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 R. Quinn Thomas Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"configure_flare-yml","dir":"Articles","previous_headings":"","what":"configure_flare.yml","title":"FLAREr configurations","text":"configure_flare.yml required located {lake_directory}/configurations/{config_set_name} directory.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"location","dir":"Articles","previous_headings":"configure_flare.yml","what":"location:","title":"FLAREr configurations","text":"site_id: Four letter code lake name: name lake latitude: latitude degrees north longitude: longitude degrees east","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"da_setup","dir":"Articles","previous_headings":"configure_flare.yml","what":"da_setup:","title":"FLAREr configurations","text":"da_method: code data assimilation method (enkf pf) enkf: ensemble Kalman Filter pf: bootstrap resampling particle filter par_fit_method: method parameter fitting inflate uses parameter inflat_pars par configuration increase variance parameters data assimilated. method used Thomas et al. 2023 perturb adds normal random noise parameter based parameter perturb_par par configuration. perturb_const Data assimilation fits mean parameter distribution uses specified variance parameters defined parameter perturb_par par configuration ensemble_size: number ensemble members localization_distance: distance meters covariances enkf covariance metric diminished. distance governs exponential decay covariance strength. no_negative_states: Force non-temperature states positive (TRUE FALSE) assimilate_first_step: Assimilate data provided initial conditions. Set FALSE initial conditions already data assimilated. (TRUE FALSE) use_obs_constraint: Assimilate observations (TRUE FALSE) obs_filename: file name targets file. required located lake_directory/targets/{site_id} directory. pf_always_resample: Force particle filter resample timestep (da_method = pf) (TRUE FALSE)","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"model_settings","dir":"Articles","previous_headings":"configure_flare.yml","what":"model_settings:","title":"FLAREr configurations","text":"ncore: number process cores use model_name: name process model (glm glm_aed) base_GLM_nml: name base GLM namelist. required lake_directory/configuraton/{config_set} directory. max_model_layers: maximum number layers allowed GLM simulations modeled_depths: vector depths (m) observations user desires output . Value top layer. par_config_file: name parameter configuration csv. required lake_directory/configuraton/{config_set} directory. parameter_calibration_config.csv obs_config_file: name observation configuration csv. required lake_directory/configuraton/{config_set} directory. states_config_file: name state configuration csv. required lake_directory/configuraton/{config_set} directory. depth_model_sd_config_file: Optional state configuration file specifies process uncertainty depends depth. used required lake_directory/configuraton/{config_set} directory.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"default_init","dir":"Articles","previous_headings":"configure_flare.yml","what":"default_init:","title":"FLAREr configurations","text":"lake_depth: initial lake depth (meters) temp: vector initial temperature profile temp_depths: vector depths initial temperature profile salinity: initial salinity value (g/kg) snow_thickness: initial snow thickness (m) white_ice_thickness: initial white ice thickness (m) blue_ice_thickness: initial blue ice thickness (m)","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"met","dir":"Articles","previous_headings":"configure_flare.yml","what":"met:","title":"FLAREr configurations","text":"future_met_model: path met model used forecast days (relative s3$drivers$bucket path local_met_directory). defines form path partitioning. example met/gefs-v12/stage2/reference_datetime={reference_date}/site_id={site_id} provides path part brackets updated within FLARE run historical_met_model: path met model used historical days (relative s3$drivers$bucket path local_met_directory). defines form path partitioning. example met/gefs-v12/stage3/site_id={site_id} provides path part brackets updated within FLARE run. forecast_lag_days: number days look backward forecast use_ler_vars: use LER standardized met names (TRUE FALSE) historical_met_use_s3: access historical met data s3 bucket (TRUE FALSE) future_met_use_s3: access met data s3 bucket (TRUE FALSE) use_openmeteo: use openmeteo meterology inputs (TRUE FALSE) openmeteo_api: name openmeteo api use (used openmeteo = TRUE); seasonal, ensemble_forecast, historical, climate openmeteo_model: name openmeteo model use ( (used openmeteo = TRUE)); see https://open-meteo.com/en/docs list models use_openmeteo_archive: use archived version openmeteo s3 rather directly using api. (used openmeteo = TRUE) local_met_directory: directory meteorology forecasts saved using s3 access. Relative lake_directory.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"inflow","dir":"Articles","previous_headings":"configure_flare.yml","what":"inflow:","title":"FLAREr configurations","text":"include_inflow: Include inflows simulations (TRUE FALSE) include_outflow: Include outflows simulations (TRUE FALSE) future_inflow_model: path inflow model used forecast days (relative s3$inflow$bucket path local_inflow_directory). defines form path partitioning. example inflow/model_id=historical/reference_datetime={reference_date}/site_id={site_id} provides path part brackets updated within FLARE run historical_inflow_model: path inflow model used historical days (relative s3$inflow$bucket path). defines form path partitioning. example inflow/model_id=historical/site_id={site_id} provides path part brackets updated within FLARE run. local_inflow_directory: directory inflow forecasts saved using s3 access. Relative lake_directory. future_outflow_model: path outflow model used forecast days (relative s3$outflow$bucket path local_outflow_directory) historical_outflow_model: path outflow model used historical days (relative s3$outflow$bucket path local_outflow_directory) local_outflow_directory: directory outflow forecasts saved using s3 access. Relative lake_directory. use_flows_s3: access flow models s3 bucket (TRUE FALSE)","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"uncertainty","dir":"Articles","previous_headings":"configure_flare.yml","what":"uncertainty:","title":"FLAREr configurations","text":"observation: Include uncertainty observations (TRUE FALSE) process: Include normal random noise added states forecast (TRUE FALSE) weather: Include multiple weather forecast ensemble members (TRUE FALSE) initial_condition: Include uncertainty states initiation forecast (TRUE FALSE) parameter: Include uncertainty parameters forecast (TRUE FALSE) inflow: Include uncertainty inflow forecast (TRUE FALSE)","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"output_settings","dir":"Articles","previous_headings":"configure_flare.yml","what":"output_settings:","title":"FLAREr configurations","text":"diagnostics_names: names non-state GLM variables save generate_plots: generate diagnostic plots (TRUE FALSE) names: variable names csv file produced GLM. Options https://github.com/AquaticEcoDynamics/glm-aed/wiki/Navigating-GLM-outputs save_names: name variable FLARE forecast output. may differ csv_name want add information variable name. example csv may temp want save outflow_temp know outflow. output file output.nc save name needs aggregation function (mean, min, max supported). example, value temp_mean calculate daily mean subdaily output.nc file. nsave glm3.nml file needs adjusted output sub-daily time steps (nsave = 1 output hourly dt = 3600). file: name GLM output csv variable. defined GLM nml. Example lake.csv, outlet_00.csv, output.nc depth: Depth daily diagnostic. Use NA variables associated depth (like co2 flux).","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"s3","dir":"Articles","previous_headings":"configure_flare.yml","what":"s3","title":"FLAREr configurations","text":"endpoint: s3 endpoint met drivers bucket: s3 bucket met drivers endpoint: s3 endpoint inflow drivers bucket: s3 bucket inflow drivers endpoint: s3 endpoint outflow drivers bucket: s3 bucket outflow drivers endpoint: s3 endpoint target files bucket: s3 bucket target files endpoint: s3 endpoint forecast parquet files bucket: s3 bucket forecast parquet files endpoint: s3 endpoint restart yaml file bucket: s3 bucket restart yaml file endpoint: s3 endpoint scores bucket: s3 bucket scores","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"parameter_calibration_config-csv","dir":"Articles","previous_headings":"","what":"parameter_calibration_config.csv","title":"FLAREr configurations","text":"parameter_calibration_config.csv required located {lake_directory}/configurations/{config_set_name} directory. par_names: vector GLM names parameter values estimated par_names_save: vector names parameter values estimated desired output plots par_file: vector nml csv file names contains parameter estimated par_init: vector initial mean value parameters par_init_lowerbound: vector lower bound initial uniform distribution parameters par_init_upperbound: vector upper bound initial uniform distribution parameters par_lowerbound: vector lower bounds parameter can par_upperbound: vector upper bounds parameter can perturb_par: parameter controlling noise spread parameters. parameter fitting method perturb standard deviation normally distributed random noise added parameters. parameter fitting method perturb_const, standard deviation parameter distribution. parameter fitting method inflate variance inflation factor applied parameter component ensemble (Value greater 1). par_units: Units parameter plotting fix_par: 0 = fit parameter, 1 = hold parameter par_init","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"states_config-csv","dir":"Articles","previous_headings":"","what":"states_config.csv","title":"FLAREr configurations","text":"states_config.csv required located {lake_directory}/configurations/{config_set_name} directory. state_names: name states. initial_conditions: initial conditions state observations available initialize. Assumes initial conditions constant depths, except temperature uses default_temp_init variable configure_flare.R set depth profile observations lacking model_sd: standard deviation process error tate vert_decorr_length: initial_model_sd: standard deviation initial distribution state states_to_obs_mapping: multiplier state convert observation. cases 1. However, case phytoplankton, model predicts mmol/m3 biomass observations ug/L chla. Therefore multiplier biomass chla conversion NA required matching observations Name column must match observation name NA required matching observations Name column must match observation name init_obs_name: name observation used initialize state observation init_obs_mapping: multiplier observation used initialize. example, using combined DOC measurement initialize two DOC states, need provide proportion observation assigned state.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"depth_model_sd-csv","dir":"Articles","previous_headings":"states_config.csv","what":"depth_model_sd.csv:","title":"FLAREr configurations","text":"depth_model_sd.csv optional located {lake_directory}/configurations/{config_set_name} directory. depth: depth (m) column names: variable name states depth varying process uncertainty. Values sd depth. sd interpolated extrapolated beyond depths provided.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-config-vignette.html","id":"observations_config-csv","dir":"Articles","previous_headings":"","what":"observations_config.csv","title":"FLAREr configurations","text":"observations_config.csv required located {lake_directory}/configurations/{config_set_name} directory. state_names_obs: names states observations obs_sd: standard deviation observation uncertainty target_variable: name variable data file used observed state. multi_depth: 1 = observation multiple depths, 0 = observation depth associated .","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"FLAREr example","text":"document serves users guide tutorial FLARE (Forecasting Lake Reservoir Ecosystems) system (Thomas et al. 2020). FLARE generates forecasts forecast uncertainty water temperature water quality 1 35-dau ahead time horizon multiple depths lake reservoir. uses data assimilation update initial starting point forecast model parameters based real-time statistical comparisons observations. developed, tested, evaluated Falling Creek Reservoir Vinton,VA (Thomas et al. 2020) National Ecological Observatory Network lakes (Thomas et al. 2023 FLARE set R scripts Generating inputs configuration files required General Lake Model (GLM) Applying data assimilation GLM Processing archiving forecast output Visualizing forecast output FLARE uses 1-D General Lake Model (Hipsey et al. 2019) mechanistic process model predicts hydrodynamics lake reservoir. forecasts water quality, uses GLM Aquatic Ecosystem Dynamics library. binaries GLM GLM-AED included FLARE code available GitHub. FLARE requires GLM version 3.3 higher. information GLM can found : GLM 3.0.0 manuscript GLM GitHub GLM users guide FLARE development supported grants National Science Foundation (CNS-1737424, DEB-1753639, EF-1702506, DBI-1933016, DEB-1926050)","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"requirements","dir":"Articles","previous_headings":"","what":"Requirements","title":"FLAREr example","text":"RStudio FLAREr R package FLAREr dependencies","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"set-up","dir":"Articles","previous_headings":"","what":"1: Set up","title":"FLAREr example","text":"First, install FLAREr package GitHub. required packages also downloaded. Second, download General Lake Model (GLM) code. can get using multiple pathways easiest way install GLM3r package Github using installing GLM3r need set environment variable points GLM code. Third, create directory working directory FLARE run. find directory computer can use print(lake_directory)","code":"remotes::install_github(\"flare-forecast/FLAREr\") remotes::install_github(\"rqthomas/GLM3r\") #> Using github PAT from envvar GITHUB_PAT. Use `gitcreds::gitcreds_set()` and unset GITHUB_PAT in .Renviron (or elsewhere) if you want to use the more secure git credential store instead. #> Skipping install of 'GLM3r' from a github remote, the SHA1 (977b2236) has not changed since last install. #>   Use `force = TRUE` to force installation Sys.setenv('GLM_PATH'='GLM3r') lake_directory <-  normalizePath(tempdir(),  winslash = \"/\") dir.create(file.path(lake_directory, \"configuration/default\"), recursive = TRUE) dir.create(file.path(lake_directory, \"targets\")) # For QAQC data dir.create(file.path(lake_directory, \"drivers\")) # Weather and inflow forecasts"},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"configuration-files","dir":"Articles","previous_headings":"","what":"2: Configuration files","title":"FLAREr example","text":"First, FLAREr requires two configuration yaml files. code copies examples FLAREr package. Second, FLAREr requires set configuration CSV files. CSV files used define states simulated parameters calibrated. code copies examples FLAREr package Third, FLAREr requires GLM specific configurations files. applications require water temperature, GLM namelist file needed. Applications require water quality variables require additional namelist files associated aed model.","code":"file.copy(system.file(\"extdata\", \"configuration\", \"default\", \"configure_flare.yml\", package = \"FLAREr\"), file.path(lake_directory, \"configuration\", \"default\", \"configure_flare.yml\")) #> [1] TRUE file.copy(system.file(\"extdata\", \"configuration\", \"default\", \"configure_run.yml\", package = \"FLAREr\"), file.path(lake_directory, \"configuration\", \"default\", \"configure_run.yml\")) #> [1] TRUE file.copy(system.file(\"extdata\", \"configuration\", \"default\", \"parameter_calibration_config.csv\", package = \"FLAREr\"), file.path(lake_directory, \"configuration\", \"default\", \"parameter_calibration_config.csv\")) #> [1] TRUE file.copy(system.file(\"extdata\", \"configuration\", \"default\", \"states_config.csv\", package = \"FLAREr\"), file.path(lake_directory, \"configuration\", \"default\", \"states_config.csv\")) #> [1] TRUE file.copy(system.file(\"extdata\", \"configuration\", \"default\", \"depth_model_sd.csv\", package = \"FLAREr\"), file.path(lake_directory, \"configuration\", \"default\", \"depth_model_sd.csv\")) #> [1] TRUE file.copy(system.file(\"extdata\", \"configuration\", \"default\", \"observations_config.csv\", package = \"FLAREr\"), file.path(lake_directory, \"configuration\", \"default\", \"observations_config.csv\")) #> [1] TRUE file.copy(system.file(\"extdata\", \"configuration\", \"default\", \"glm3.nml\", package = \"FLAREr\"), file.path(lake_directory, \"configuration\", \"default\", \"glm3.nml\")) #> [1] TRUE"},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"observation-and-driver-files","dir":"Articles","previous_headings":"","what":"3: Observation and driver files","title":"FLAREr example","text":"Since FLAREr package general application, scripts download process observation drivers included package. Therefore application FLARE lake require set additional scripts specific data formats lakes. example includes files application FCR. First, FLAREr requires observation file specific name (observations_postQAQC_long.csv) format.","code":"file.copy(from = system.file(\"extdata/targets\", package = \"FLAREr\"), to = lake_directory, recursive = TRUE) #> [1] TRUE file.copy(from = system.file(\"extdata/drivers\", package = \"FLAREr\"), to = lake_directory, recursive = TRUE) #> [1] TRUE head(read_csv(file.path(lake_directory,\"targets/fcre/fcre-targets-insitu.csv\"), show_col_types = FALSE)) #> # A tibble: 6 × 5 #>   datetime            site_id depth observation variable    #>   <dttm>              <chr>   <dbl>       <dbl> <chr>       #> 1 2022-09-28 00:00:00 fcre        0        20.5 temperature #> 2 2022-09-29 00:00:00 fcre        0        19.6 temperature #> 3 2022-09-30 00:00:00 fcre        0        18.8 temperature #> 4 2022-10-01 00:00:00 fcre        0        17.2 temperature #> 5 2022-10-02 00:00:00 fcre        0        16.0 temperature #> 6 2022-10-03 00:00:00 fcre        0        15.4 temperature"},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"configure-simulation-glm","dir":"Articles","previous_headings":"","what":"2: Configure simulation (GLM)","title":"FLAREr example","text":"configuration functions spread across files. files described detail glm3.nml configure_flare.yml configure_run.yml states_config.csv observations_config.csv parameter_calibration_config.csv depth_model_sd.csv","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"configure_run-yml","dir":"Articles","previous_headings":"2: Configure simulation (GLM)","what":"configure_run.yml","title":"FLAREr example","text":"file configuration file define specific timing run. restart_file: full path file want use initial conditions simulation. set NA simulation continuation previous simulation. sim_name: string name simulation. appear output file names forecast_days: forecast horizon. max 16 days. Set 0if data assimilation observed drivers. 00:00:00 UTC 06:00:00 UTC 12:00:00 UTC 18:00:00 UTC forecast_start_datetime: date want forecasting start simulation. Uses YYYY-MM-DD mm:hh:ss format (e.g., “2019-09-20 00:00:00”). difference start_time forecast_start_datetime determines many days data assimilation occur using observed drivers handing forecasted drivers assimilating data configure_flare: name FLARE configuration file located configuration/[config_set] directory (configure_flare.yml) configure_obs: name optional observation processing configuration file located configuration/[config_set] directory (configure_obs.yml) use_s3: use s3 cloud storage saving forecast, scores, restart files.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"glm3-nml","dir":"Articles","previous_headings":"2: Configure simulation (GLM)","what":"glm3.nml","title":"FLAREr example","text":"glm3.nml configuration file required GLM. can configured run GLM GLM + AED. version already configured run GLM FCR need modify example simulation.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"configure_flare-yml","dir":"Articles","previous_headings":"2: Configure simulation (GLM)","what":"configure_flare.yml","title":"FLAREr example","text":"configure_flare.yml bulk configurations FLARE set reuse. end document describes configurations configure_flare.yml. Later tutorial, modify key configurations configure_flare.yml","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"states_config-csv","dir":"Articles","previous_headings":"2: Configure simulation (GLM)","what":"states_config.csv","title":"FLAREr example","text":"Needs configuration/[config_set]","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"observations_config-csv","dir":"Articles","previous_headings":"2: Configure simulation (GLM)","what":"observations_config.csv","title":"FLAREr example","text":"Needs configuration/[config_set]","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"parameter_calibration_config-csv","dir":"Articles","previous_headings":"2: Configure simulation (GLM)","what":"parameter_calibration_config.csv","title":"FLAREr example","text":"Needs configuration/[config_set]","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"run-your-glm-example-simulation","dir":"Articles","previous_headings":"","what":"3: Run your GLM example simulation","title":"FLAREr example","text":"Read configuration files following reads configuration files overwrites directory locations based lake_directory directories provided . practice specific directories configure file overwrite . Visualizing output   ## 5. Comparing observations","code":"next_restart <- FLAREr::run_flare(lake_directory = lake_directory,configure_run_file = \"configure_run.yml\", config_set_name = \"default\") #> Warning in set_up_simulation(configure_run_file, lake_directory, clean_start = #> clean_start, : NAs introduced by coercion #> Warning in set_up_simulation(configure_run_file, lake_directory, clean_start = #> clean_start, : NAs introduced by coercion #> Warning in set_up_simulation(configure_run_file, lake_directory, clean_start = #> clean_start, : NAs introduced by coercion #> Warning in set_up_simulation(configure_run_file, lake_directory, clean_start = #> clean_start, : NAs introduced by coercion #> Warning in set_up_simulation(configure_run_file, lake_directory, clean_start = #> clean_start, : NAs introduced by coercion #>      Running forecast that starts on: 2022-09-28 00:00:00 #> Retrieving Observational Data... #> Generating Met Forecasts... #> Registered S3 method overwritten by 'tsibble': #>   method               from  #>   as_tibble.grouped_df dplyr #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo #> Creating inflow/outflow files... #> Setting states and initial conditions... #> Running time step 1/20 : 2022-09-28 00:00 - 2022-09-29 00:00 [2025-08-21 18:59:42.885747] #> performing data assimilation #> zone1temp: mean 11.1375 sd 1.0221 #> zone2temp: mean 14.1642 sd 1.2743 #> lw_factor: mean 0.9721 sd 0.0525 #> Running time step 2/20 : 2022-09-29 00:00 - 2022-09-30 00:00 [2025-08-21 18:59:48.347103] #> performing data assimilation #> zone1temp: mean 11.4405 sd 1.0471 #> zone2temp: mean 14.1361 sd 1.2831 #> lw_factor: mean 0.9866 sd 0.0465 #> Running time step 3/20 : 2022-09-30 00:00 - 2022-10-01 00:00 [2025-08-21 18:59:50.291485] #> performing data assimilation #> zone1temp: mean 11.832 sd 0.9602 #> zone2temp: mean 14.7372 sd 1.4802 #> lw_factor: mean 0.8995 sd 0.0423 #> Running time step 4/20 : 2022-10-01 00:00 - 2022-10-02 00:00 [2025-08-21 18:59:52.273699] #> performing data assimilation #> zone1temp: mean 11.6925 sd 1.3402 #> zone2temp: mean 14.6477 sd 2.1824 #> lw_factor: mean 0.9234 sd 0.0415 #> Running time step 5/20 : 2022-10-02 00:00 - 2022-10-03 00:00 [2025-08-21 18:59:54.261146] #> zone1temp: mean 11.7124 sd 1.5978 #> zone2temp: mean 14.8037 sd 2.4642 #> lw_factor: mean 0.9187 sd 0.0493 #> Running time step 6/20 : 2022-10-03 00:00 - 2022-10-04 00:00 [2025-08-21 18:59:56.263757] #> zone1temp: mean 11.8303 sd 1.9282 #> zone2temp: mean 14.9288 sd 2.8023 #> lw_factor: mean 0.9168 sd 0.0466 #> Running time step 7/20 : 2022-10-04 00:00 - 2022-10-05 00:00 [2025-08-21 18:59:58.314797] #> zone1temp: mean 11.7116 sd 2.0631 #> zone2temp: mean 14.8918 sd 3.1777 #> lw_factor: mean 0.914 sd 0.0552 #> Running time step 8/20 : 2022-10-05 00:00 - 2022-10-06 00:00 [2025-08-21 19:00:00.353961] #> zone1temp: mean 11.7555 sd 2.3384 #> zone2temp: mean 14.8048 sd 3.0798 #> lw_factor: mean 0.9177 sd 0.0615 #> Running time step 9/20 : 2022-10-06 00:00 - 2022-10-07 00:00 [2025-08-21 19:00:02.241181] #> zone1temp: mean 11.8282 sd 2.5837 #> zone2temp: mean 14.7285 sd 3.0437 #> lw_factor: mean 0.9195 sd 0.0647 #> Running time step 10/20 : 2022-10-07 00:00 - 2022-10-08 00:00 [2025-08-21 19:00:04.095983] #> zone1temp: mean 11.6947 sd 2.846 #> zone2temp: mean 14.6585 sd 3.3599 #> lw_factor: mean 0.9197 sd 0.0679 #> Running time step 11/20 : 2022-10-08 00:00 - 2022-10-09 00:00 [2025-08-21 19:00:05.974499] #> zone1temp: mean 11.6428 sd 3.4917 #> zone2temp: mean 14.6185 sd 3.3229 #> lw_factor: mean 0.9209 sd 0.0669 #> Running time step 12/20 : 2022-10-09 00:00 - 2022-10-10 00:00 [2025-08-21 19:00:07.827773] #> zone1temp: mean 11.5888 sd 3.5861 #> zone2temp: mean 14.8978 sd 3.3326 #> lw_factor: mean 0.9221 sd 0.0712 #> Running time step 13/20 : 2022-10-10 00:00 - 2022-10-11 00:00 [2025-08-21 19:00:09.709956] #> zone1temp: mean 11.4508 sd 3.4511 #> zone2temp: mean 14.8334 sd 3.241 #> lw_factor: mean 0.9266 sd 0.0725 #> Running time step 14/20 : 2022-10-11 00:00 - 2022-10-12 00:00 [2025-08-21 19:00:11.588118] #> zone1temp: mean 11.7084 sd 3.503 #> zone2temp: mean 14.894 sd 3.5116 #> lw_factor: mean 0.926 sd 0.0761 #> Running time step 15/20 : 2022-10-12 00:00 - 2022-10-13 00:00 [2025-08-21 19:00:13.512618] #> zone1temp: mean 11.9343 sd 3.5267 #> zone2temp: mean 15.0102 sd 3.5515 #> lw_factor: mean 0.9259 sd 0.0774 #> Running time step 16/20 : 2022-10-13 00:00 - 2022-10-14 00:00 [2025-08-21 19:00:15.436418] #> zone1temp: mean 11.9746 sd 3.3373 #> zone2temp: mean 14.7436 sd 3.7195 #> lw_factor: mean 0.9244 sd 0.079 #> Running time step 17/20 : 2022-10-14 00:00 - 2022-10-15 00:00 [2025-08-21 19:00:17.392425] #> zone1temp: mean 12.192 sd 3.4602 #> zone2temp: mean 14.7866 sd 3.6314 #> lw_factor: mean 0.9201 sd 0.0823 #> Running time step 18/20 : 2022-10-15 00:00 - 2022-10-16 00:00 [2025-08-21 19:00:19.344236] #> zone1temp: mean 12.06 sd 3.6724 #> zone2temp: mean 14.6612 sd 3.684 #> lw_factor: mean 0.9251 sd 0.0857 #> Running time step 19/20 : 2022-10-16 00:00 - 2022-10-17 00:00 [2025-08-21 19:00:21.309771] #> zone1temp: mean 11.9983 sd 3.558 #> zone2temp: mean 14.6992 sd 3.5753 #> lw_factor: mean 0.9187 sd 0.0861 #> Running time step 20/20 : 2022-10-17 00:00 - 2022-10-18 00:00 [2025-08-21 19:00:23.248761] #> zone1temp: mean 12.042 sd 3.9072 #> zone2temp: mean 14.7814 sd 3.9474 #> lw_factor: mean 0.9149 sd 0.0775 #> Writing restart #> Writing forecast #> starting writing dataset #> ending writing dataset #> successfully generated flare forecats for: fcre-2022-10-02-test df <- arrow::open_dataset(file.path(lake_directory,\"forecasts/parquet\")) |> collect() head(df) #> # A tibble: 6 × 14 #>   reference_datetime  datetime            pub_datetime        depth family   #>   <dttm>              <dttm>              <dttm>              <dbl> <chr>    #> 1 2022-10-02 00:00:00 2022-09-28 00:00:00 2025-08-21 19:00:25     0 ensemble #> 2 2022-10-02 00:00:00 2022-09-28 00:00:00 2025-08-21 19:00:25     0 ensemble #> 3 2022-10-02 00:00:00 2022-09-28 00:00:00 2025-08-21 19:00:25     0 ensemble #> 4 2022-10-02 00:00:00 2022-09-28 00:00:00 2025-08-21 19:00:25     0 ensemble #> 5 2022-10-02 00:00:00 2022-09-28 00:00:00 2025-08-21 19:00:25     0 ensemble #> 6 2022-10-02 00:00:00 2022-09-28 00:00:00 2025-08-21 19:00:25     0 ensemble #> # ℹ 9 more variables: parameter <int>, variable <chr>, prediction <dbl>, #> #   forecast <dbl>, variable_type <chr>, log_weight <dbl>, site_id <chr>, #> #   model_id <chr>, reference_date <chr> df |>    filter(variable == \"temperature\",          depth == 1) |>    ggplot(aes(x = datetime, y = prediction, group = parameter)) +   geom_line() +   geom_vline(aes(xintercept = as_datetime(reference_datetime))) +   labs(title = \"1 m water temperature forecast\") targets_df <- read_csv(file.path(lake_directory, \"targets/fcre/fcre-targets-insitu.csv\"), show_col_types = FALSE) combined_df <- left_join(df, targets_df, by = join_by(datetime, depth, variable, site_id)) combined_df |>    filter(variable == \"temperature\",          depth == 1) |>    ggplot(aes(x = datetime, y = prediction, group = parameter)) +   geom_line() +   geom_vline(aes(xintercept = as_datetime(reference_datetime))) +   geom_point(aes(y = observation), color = \"red\") +   labs(title = \"1 m water temperature forecast\") df |>    filter(variable == \"lw_factor\") |>    ggplot(aes(x = datetime, y = prediction, group = parameter)) +   geom_line() +   geom_vline(aes(xintercept = as_datetime(reference_datetime))) +   labs(title = \"lw_factor parameter\")"},{"path":[]},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"turning-off-data-assimilation","dir":"Articles","previous_headings":"6: Modifying FLARE","what":"Turning off data assimilation","title":"FLAREr example","text":"configure_flare.yml can change da_method “none”","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"removing-parameter-estimation","dir":"Articles","previous_headings":"6: Modifying FLARE","what":"Removing parameter estimation","title":"FLAREr example","text":"Set par_config_file = .na configure_flare.yml","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"increasing-observational-uncertainty","dir":"Articles","previous_headings":"6: Modifying FLARE","what":"Increasing observational uncertainty","title":"FLAREr example","text":"second modification increase observational uncertainty. observations_config.csv set obs_sd = 1.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-example-vignette.html","id":"changing-the-ensemble-size","dir":"Articles","previous_headings":"6: Modifying FLARE","what":"Changing the ensemble size","title":"FLAREr example","text":"variable ensemble_size allows adjust size ensemble.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"configure_flare-yml","dir":"Articles","previous_headings":"","what":"configure_flare.yml","title":"FLAREr upgrade","text":"configure_flare.yml required located {lake_directory}/configurations/{config_set_name} directory.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"da_setup","dir":"Articles","previous_headings":"configure_flare.yml","what":"da_setup:","title":"FLAREr upgrade","text":"localization_distance: set NA","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"model_settings","dir":"Articles","previous_headings":"configure_flare.yml","what":"model_settings:","title":"FLAREr upgrade","text":"max_model_layers: set 75 modeled_depths” now depth observations depths want output (e.g., depths used data assimilation) GLM internal sets depth (actually now heights) modeled.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"met","dir":"Articles","previous_headings":"configure_flare.yml","what":"met:","title":"FLAREr upgrade","text":"historical met needs model. using stage 3 NOAA just need point historical_met_model local_met_directory . using observations historical met need create “model” observations. model needs parameter prediction column. number ensemble members historical model needs match number future model. example code converting gapfilled meteorology file “model”. future_met_model: path met model used forecast days (relative s3$drivers$bucket path local_met_directory). defines form path partitioning. example met/gefs-v12/stage2/reference_datetime={reference_date}/site_id={site_id} provides path part brackets updated within FLARE run historical_met_model: path met model used historical days (relative s3$drivers$bucket path local_met_directory). defines form path partitioning. example met/gefs-v12/stage3/site_id={site_id} provides path part brackets updated within FLARE run forecast_lag_days: number days look backward forecast use_ler_vars: use LER standardized met names (TRUE FALSE) historical_met_use_s3: access historical met data s3 bucket (TRUE FALSE) future_met_use_s3: access future met data s3 bucket (TRUE FALSE) use_openmeteo: use openmeteo meterology inputs (TRUE FALSE) openmeteo_api: name openmeteo api use (used openmeteo = TRUE); seasonal, ensemble_forecast, historical, climate openmeteo_model: name openmeteo model use ( (used openmeteo = TRUE)); see https://open-meteo.com/en/docs list models use_openmeteo_archive: use archived version openmeteo s3 rather directly using api. (used openmeteo = TRUE) local_met_directory: directory meteorology forecasts saved using s3 access. Relative lake_directory.","code":"met_ensemble <- 31 hist_interp_met <- readr::read_csv(cleaned_met_file) |>   mutate(parameter = 1) |>   reframe(prediction = rnorm(met_ensemble, mean = observation, sd = 0),           parameter = 0:(met_ensemble-1),           .by = c(site_id, datetime, variable)) |>   arrow::write_dataset(path = file.path(lake_directory, \"drivers/met/historical/model_id=obs_interp/site_id=fcre\"))"},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"inflow","dir":"Articles","previous_headings":"configure_flare.yml","what":"inflow:","title":"FLAREr upgrade","text":"inflow outflows need separate models. include_inflow: Include inflows simulations (TRUE FALSE) include_outflow: Include outflows simulations (TRUE FALSE) future_inflow_model: path inflow model used forecast days (relative s3$inflow$bucket path local_inflow_directory). defines form path partitioning. example inflow/model_id=historical/reference_datetime={reference_date}/site_id={site_id} provides path part brackets updated within FLARE run historical_inflow_model: path inflow model used historical days (relative s3$inflow$bucket path). defines form path partitioning. example inflow/model_id=historical/site_id={site_id} provides path part brackets updated within FLARE run. local_inflow_directory) local_inflow_directory: directory inflow forecasts saved using s3 access. Relative lake_directory. future_outflow_model: path outflow model used forecast days (relative s3$outflow$bucket path local_outflow_directory) historical_outflow_model: path outflow model used historical days (relative s3$outflow$bucket path local_outflow_directory) local_outflow_directory: directory outflow forecasts saved using s3 access. Relative lake_directory.","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"uncertainty","dir":"Articles","previous_headings":"configure_flare.yml","what":"uncertainty:","title":"FLAREr upgrade","text":"inflow: change name variable inflow_process","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"output_settings","dir":"Articles","previous_headings":"configure_flare.yml","what":"output_settings:","title":"FLAREr upgrade","text":"generate_plots: generate diagnostic plots (TRUE FALSE) remove score_past `","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"s3","dir":"Articles","previous_headings":"configure_flare.yml","what":"s3","title":"FLAREr upgrade","text":"section now inflow_drivers outflow_drivers. - drivers: - endpoint: s3 endpoint met drivers - bucket: s3 bucket met drivers - inflow_drivers: - endpoint: s3 endpoint inflow drivers - bucket: s3 bucket inflow drivers - outflow_drivers: - endpoint: s3 endpoint outflow drivers - bucket: s3 bucket outflow drivers Change endpoint: s3 endpoint restart files bucket: s3 bucket restart files endpoint: s3 endpoint restart files bucket: s3 bucket restart files","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"parameter_calibration_config-csv","dir":"Articles","previous_headings":"","what":"parameter_calibration_config.csv","title":"FLAREr upgrade","text":"Remove column inflat_par parameter_calibration_config.csv Add fix_par: 0 = fit parameter, 1 = hold parameter par_init","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"states_config-csv","dir":"Articles","previous_headings":"","what":"states_config.csv","title":"FLAREr upgrade","text":"change states_config.csv","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"depth_model_sd-csv","dir":"Articles","previous_headings":"states_config.csv","what":"depth_model_sd.csv:","title":"FLAREr upgrade","text":"change depth_model_sd.csv .","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"observations_config-csv","dir":"Articles","previous_headings":"","what":"observations_config.csv","title":"FLAREr upgrade","text":"Add following column observations_config.csv multi_depth: 1 = observation multiple depths, 0 = observation depth associated . Remove column distance_theshold","code":""},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"glm3-nml","dir":"Articles","previous_headings":"","what":"GLM3.nml","title":"FLAREr upgrade","text":"Add following variable &init_profiles section Change following variables init_profiles section : the_depth the_heights num_depths num_heights Change following variables glm_setup section :","code":"restart_mixer_count = 0 min_layer_vol = 0.025 min_layer_thick = 0.2 max_layer_thick = 0.8"},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"other-changes","dir":"Articles","previous_headings":"","what":"Other changes","title":"FLAREr upgrade","text":"scoring part FLAREr removed. need add workflow script install remotes::install_github(\"eco4cast/score4cast\") code :","code":"generate_forecast_score_arrow <- function(targets_file,                                           forecast_df,                                           use_s3 = FALSE,                                           bucket = NULL,                                           endpoint = NULL,                                           local_directory = NULL,                                           variable_types = \"state\"){     if(use_s3){     output_directory <- arrow::s3_bucket(bucket = bucket,                                          endpoint_override =  endpoint)   }else{     output_directory <- arrow::SubTreeFileSystem$create(local_directory)   }   target <- readr::read_csv(targets_file, show_col_types = FALSE)    df <- forecast_df |>     dplyr::filter(variable_type %in% variable_types) |>     dplyr::mutate(family = as.character(family)) |>     score4cast::crps_logs_score(target, extra_groups = c('depth')) |>     dplyr::mutate(horizon = datetime-lubridate::as_datetime(reference_datetime)) |>     dplyr::mutate(horizon = as.numeric(lubridate::as.duration(horizon),                                 units = \"seconds\"),            horizon = horizon / 86400)    df <- df |> dplyr::mutate(reference_date = lubridate::as_date(reference_datetime))    arrow::write_dataset(df, path = output_directory, partitioning = c(\"site_id\",\"model_id\",\"reference_date\"))  }"},{"path":"http://flare-forecast.org/FLAREr/articles/flare-upgrade-vignette.html","id":"other-changes-1","dir":"Articles","previous_headings":"","what":"Other changes","title":"FLAREr upgrade","text":"package depend GLM3r package anymore. multiple options getting GLM binary. easiest install GLM3r github (README information getting GLM binary) require set environment variable workflow script calls run_flare. update_run_config2 function replaced update_run_config function check_noaa_present_arrow function replaced check_noaa_present function set_configuration function replaced set_up_simulation function FLAREr functions now require ::: exported package. forecast parquet output pub_datetime rather pub_date new column log_weight Plots saved plots subdirectory Netcdf restart files saved restart directory","code":"remotes::install_github(\"rqthomas/GLM3r\") Sys.setenv('GLM_PATH'='GLM3r')"},{"path":"http://flare-forecast.org/FLAREr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"R. Quinn Thomas. Author, maintainer. Vahid Daneshmand. Contributor. Tadhg Moore. Contributor. Freya Olsson. Contributor. Austin Delany. Contributor.","code":""},{"path":"http://flare-forecast.org/FLAREr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thomas R (2025). FLAREr: Forecasting Lake Reservoir Ecosystems R. R package version 3.0.4, http://flare-forecast.org/FLAREr/.","code":"@Manual{,   title = {FLAREr: Forecasting Lake and Reservoir Ecosystems in R},   author = {R. Quinn Thomas},   year = {2025},   note = {R package version 3.0.4},   url = {http://flare-forecast.org/FLAREr/}, }"},{"path":"http://flare-forecast.org/FLAREr/index.html","id":"flarer","dir":"","previous_headings":"","what":"Forecasting Lake and Reservoir Ecosystems in R","title":"Forecasting Lake and Reservoir Ecosystems in R","text":"document serves user guide tutorial FLARE (Forecasting Lake Reservoir Ecosystems) system (Thomas et al. 2020). FLARE generates forecasts uncertainty water temperature water quality 1- 35-day-ahead time horizon multiple depths lake reservoir. uses data assimilation update initial starting point forecast model parameters based real-time statistical comparisons observations. developed, tested, evaluated Falling Creek Reservoir Virginia (Thomas et al. 2020), Beaverdam Reservoir Virginia (Wander et al 2024), Lake Sunapee New Hampshire (Woelmer et al. 2024), National Ecological Observatory Network lakes across United States (Thomas et al. 2023 Olsson et al. 2024), Lough Feeagh Ireland (Paíz et al. 2024). FLAREr set R scripts Generating inputs configuration files required General Lake Model (GLM) Applying data assimilation GLM Processing archiving forecast output Visualizing forecast output FLARE uses 1-D General Lake Model (Hipsey et al. 2019) mechanistic process model predicts hydrodynamics lake reservoir. forecasts water quality, uses GLM Aquatic Ecosystem Dynamics library. FLARE requires GLM version 3.3 higher. information GLM can found : GLM 3.0.0 manuscript GLM GitHub GLM users guide FLARE development supported grants U.S. National Science Foundation (CNS-1737424, DBI-1933016, DBI-1933102)","code":""},{"path":"http://flare-forecast.org/FLAREr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Forecasting Lake and Reservoir Ecosystems in R","text":"need download necessary packages running. Next, need GLM model. can get using multiple pathways easiest way install GLM3r package Github using can download AquaticEcoDynamics GitHub organization. code assumes directory FLARE configurations workflow subdirectories running Mac need run: running Linux need run: Working windows","code":"remotes::install_github(\"FLARE-forecast/FLAREr\") remotes::install_github(\"rqthomas/GLM3r\") download.file(\"https://github.com/rqthomas/glm-aed/archive/refs/heads/main.zip\", \"glm_aed.zip\") unzip(\"glm_aed.zip\") system2(\"chmod\",\"u+x glm-aed-main/binaries/macos/Sonoma/glm_latest/glm\") system2(\"./glm-aed-main/binaries/macos/Sonoma/glm_latest/glm\") system2(\"chmod\",\"u+x glm-aed-main/binaries/ubuntu/22.04/glm_latest/glm\") system2(\"./glm-aed-main/binaries/ubuntu/22.04/glm_latest/glm\")"},{"path":"http://flare-forecast.org/FLAREr/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Forecasting Lake and Reservoir Ecosystems in R","text":"FLAREr set functions address key steps forecasting workflow.","code":""},{"path":"http://flare-forecast.org/FLAREr/index.html","id":"requires","dir":"","previous_headings":"Use","what":"Requires","title":"Forecasting Lake and Reservoir Ecosystems in R","text":"User-generated insitu observations, meteorology, inflow/outflow specified format. See FLARE example vignette format specification. required set directory structure follows:","code":""},{"path":"http://flare-forecast.org/FLAREr/index.html","id":"quick-run","dir":"","previous_headings":"Use","what":"Quick Run","title":"Forecasting Lake and Reservoir Ecosystems in R","text":"code produce single forecast Falling Creek Reservoir using configuration files included package.","code":"library(arrow) library(tidyverse) library(FLAREr)  remotes::install_github(\"rqthomas/GLM3r\") Sys.setenv('GLM_PATH'='GLM3r')   dir.create(tempdir(),showWarnings = FALSE) lake_directory <- file.path(tempdir(), \"extdata\") file.copy(system.file(\"extdata\", package = \"FLAREr\"), tempdir(), recursive = TRUE) run_flare(lake_directory = lake_directory,configure_run_file = \"configure_run.yml\", config_set_name = \"default\")  open_dataset(file.path(lake_directory,\"forecasts/parquet\")) |>   filter(variable == \"temperature\",          depth == 1) |>   collect() |>   ggplot(aes(x = datetime, y = prediction, group = parameter)) +   geom_line() +   geom_vline(aes(xintercept = as_datetime(reference_datetime))) +   labs(title = \"1 m water temperature forecast\")"},{"path":"http://flare-forecast.org/FLAREr/reference/check_noaa_present.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if NOAA forecasts have been downloaded and processed — check_noaa_present","title":"Check if NOAA forecasts have been downloaded and processed — check_noaa_present","text":"Check NOAA forecasts downloaded processed","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/check_noaa_present.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if NOAA forecasts have been downloaded and processed — check_noaa_present","text":"","code":"check_noaa_present(   lake_directory,   configure_run_file = \"configure_run.yml\",   config_set_name = \"default\" )"},{"path":"http://flare-forecast.org/FLAREr/reference/check_noaa_present.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if NOAA forecasts have been downloaded and processed — check_noaa_present","text":"lake_directory four-letter code site configure_run_file name simulation config_set_name FLARE configuration object (needed s3 buckets endpoit)","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/check_noaa_present.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if NOAA forecasts have been downloaded and processed — check_noaa_present","text":"logical","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/check_noaa_present.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if NOAA forecasts have been downloaded and processed — check_noaa_present","text":"","code":"if (FALSE) { # interactive()  dir <- normalizePath(tempdir(),  winslash = \"/\") lake_directory <- file.path(dir, \"extdata\") # Copy files to temporarly directory dir.create(dir,showWarnings = FALSE) file.copy(system.file(\"extdata\", package = \"FLAREr\"),           tempdir(),           recursive = TRUE)  check_noaa_present(lake_directory,                    configure_run_file = \"configure_run.yml\",                    config_set_name = \"default\") }"},{"path":"http://flare-forecast.org/FLAREr/reference/create_inflow_outflow_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating inflow and outflow files in the GLM format using arrow — create_inflow_outflow_files","title":"Generating inflow and outflow files in the GLM format using arrow — create_inflow_outflow_files","text":"Generating inflow outflow files GLM format using arrow","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_inflow_outflow_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating inflow and outflow files in the GLM format using arrow — create_inflow_outflow_files","text":"","code":"create_inflow_outflow_files(config, config_set_name, lake_directory)"},{"path":"http://flare-forecast.org/FLAREr/reference/create_inflow_outflow_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating inflow and outflow files in the GLM format using arrow — create_inflow_outflow_files","text":"config configuration file config_set_name specific name configuration within configuration directory lake_directory directory FLARE application","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_inflow_outflow_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating inflow and outflow files in the GLM format using arrow — create_inflow_outflow_files","text":"list two vectors. One vector matrix inflow_file_names matrix outflow_file_names","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_inflow_outflow_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generating inflow and outflow files in the GLM format using arrow — create_inflow_outflow_files","text":"Processes historical model data future model files GLM format","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_met_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert historical meteorology and NOAA forecasts to GLM format — create_met_files","title":"Convert historical meteorology and NOAA forecasts to GLM format — create_met_files","text":"Convert historical meteorology NOAA forecasts GLM format","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_met_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert historical meteorology and NOAA forecasts to GLM format — create_met_files","text":"","code":"create_met_files(   config,   lake_directory,   met_forecast_start_datetime,   met_start_datetime )"},{"path":"http://flare-forecast.org/FLAREr/reference/create_met_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert historical meteorology and NOAA forecasts to GLM format — create_met_files","text":"config list FLARE configurations lake_directory directory lake configurations met_forecast_start_datetime start datetime met forecasts met_start_datetime start datetime met simulation","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_met_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert historical meteorology and NOAA forecasts to GLM format — create_met_files","text":"list; vector full path converted files boolean flag issues historical meteorology files","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_met_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert historical meteorology and NOAA forecasts to GLM format — create_met_files","text":"Function combines historical meteorology NOAA forecasts create meteorology input files GLM format.  file generated ensemble member.","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_met_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert historical meteorology and NOAA forecasts to GLM format — create_met_files","text":"Quinn Thomas","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_met_files_openmet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate GLM ready met files from open meteo — create_met_files_openmet","title":"Generate GLM ready met files from open meteo — create_met_files_openmet","text":"Generate GLM ready met files open meteo","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_met_files_openmet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate GLM ready met files from open meteo — create_met_files_openmet","text":"","code":"create_met_files_openmet(   out_dir,   start_datetime,   end_datetime = NA,   forecast_start_datetime = NA,   forecast_horizon = 0,   latitude,   longitude,   site_id,   openmeteo_api = \"ensemble\",   model = NULL,   use_archive = FALSE,   bucket = NULL,   endpoint = NULL )"},{"path":"http://flare-forecast.org/FLAREr/reference/create_met_files_openmet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate GLM ready met files from open meteo — create_met_files_openmet","text":"out_dir path GLM formatted met file written start_datetime start date weather data end_datetime end date weather data forecast_start_datetime start datetime forecast forecast_horizon number days future latitude latitude longitude longitude (west negative) site_id site code openmeteo_api type weather data forecast (ensemble_forecast, season, climate, historical) model forecast model use_archive Boolen (default = FALSE); TRUE = use forecasts stored s3 bucket, FALSE = use open-meteo download directly bucket s3 bucket archive endpoint s3 endpoint archive","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_met_files_openmet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate GLM ready met files from open meteo — create_met_files_openmet","text":"list meteorology file names","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_met_files_openmet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate GLM ready met files from open meteo — create_met_files_openmet","text":"Generate GLM ready met files open meteo","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_obs_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create matrix of observations in the format required by run_da_forecast — create_obs_matrix","title":"Create matrix of observations in the format required by run_da_forecast — create_obs_matrix","text":"Create matrix observations format required run_da_forecast","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_obs_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create matrix of observations in the format required by run_da_forecast — create_obs_matrix","text":"","code":"create_obs_matrix(cleaned_observations_file_long, obs_config, config)"},{"path":"http://flare-forecast.org/FLAREr/reference/create_obs_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create matrix of observations in the format required by run_da_forecast — create_obs_matrix","text":"cleaned_observations_file_long string; file name (full path) long-format observation file obs_config list; observations configuration list config list; flare configuration list","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_obs_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create matrix of observations in the format required by run_da_forecast — create_obs_matrix","text":"matrix based generate_initial_conditions() run_da_forecast()","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_obs_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create matrix of observations in the format required by run_da_forecast — create_obs_matrix","text":"Creates matrix observations maps modeled states observed states. function uses information columns obs_config file.","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_obs_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create matrix of observations in the format required by run_da_forecast — create_obs_matrix","text":"Quinn Thomas","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_obs_non_vertical.html","id":null,"dir":"Reference","previous_headings":"","what":"Process observation for variables that don't have depth — create_obs_non_vertical","title":"Process observation for variables that don't have depth — create_obs_non_vertical","text":"Process observation variables depth","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_obs_non_vertical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process observation for variables that don't have depth — create_obs_non_vertical","text":"","code":"create_obs_non_vertical(   cleaned_observations_file_long,   obs_config,   start_datetime,   end_datetime,   forecast_start_datetime,   forecast_horizon )"},{"path":"http://flare-forecast.org/FLAREr/reference/create_obs_non_vertical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process observation for variables that don't have depth — create_obs_non_vertical","text":"cleaned_observations_file_long string; file name (full path) long-format observation file obs_config string; file name (full path) long-format observation file start_datetime first datetime simulation end_datetime last datetime simulation forecast_start_datetime datetime forecast starts forecast_horizon number days forecasted","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_obs_non_vertical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process observation for variables that don't have depth — create_obs_non_vertical","text":"list secchi depth observations use FLAREs","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/create_obs_non_vertical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process observation for variables that don't have depth — create_obs_non_vertical","text":"Process observation variables depth","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/delete_restart.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete restart file on s3 bucket — delete_restart","title":"Delete restart file on s3 bucket — delete_restart","text":"Delete restart file s3 bucket","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/delete_restart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete restart file on s3 bucket — delete_restart","text":"","code":"delete_restart(site_id, sim_name, bucket = \"restart\", endpoint)"},{"path":"http://flare-forecast.org/FLAREr/reference/delete_restart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete restart file on s3 bucket — delete_restart","text":"site_id four letter code site sim_name name simulation bucket s3 bucket endpoint S3 endpoint","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/delete_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete simulation on s3 bucket — delete_sim","title":"Delete simulation on s3 bucket — delete_sim","text":"Delete simulation s3 bucket","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/delete_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete simulation on s3 bucket — delete_sim","text":"","code":"delete_sim(site_id, sim_name, config)"},{"path":"http://flare-forecast.org/FLAREr/reference/delete_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete simulation on s3 bucket — delete_sim","text":"site_id four letter code site sim_name name simulation config FLARE configuration object (needed s3 buckets endpoit)","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/generate_initial_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate initial conditions for FLARE — generate_initial_conditions","title":"Generate initial conditions for FLARE — generate_initial_conditions","text":"Generate initial conditions FLARE","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/generate_initial_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate initial conditions for FLARE — generate_initial_conditions","text":"","code":"generate_initial_conditions(   states_config,   obs_config,   pars_config = NULL,   obs,   config,   obs_non_vertical )"},{"path":"http://flare-forecast.org/FLAREr/reference/generate_initial_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate initial conditions for FLARE — generate_initial_conditions","text":"states_config list; list state configurations obs_config list; list observation configurations pars_config list; list parameter configurations  (Default = NULL) obs array; array observations. Required dimensions [nobs, time, depth] config list; list configurations obs_non_vertical list; observations variables vertical dimension.","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/generate_initial_conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate initial conditions for FLARE — generate_initial_conditions","text":"list; list contains initial conditions objects required run_da_forecast()","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/generate_initial_conditions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate initial conditions for FLARE — generate_initial_conditions","text":"Function generate initial conditions either default values states_config, observations (available), previous run using output restart file.","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/generate_initial_conditions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate initial conditions for FLARE — generate_initial_conditions","text":"Quinn Thomas","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/generate_states_to_obs_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Map the states to the observations — generate_states_to_obs_mapping","title":"Map the states to the observations — generate_states_to_obs_mapping","text":"Map states observations","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/generate_states_to_obs_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map the states to the observations — generate_states_to_obs_mapping","text":"","code":"generate_states_to_obs_mapping(states_config, obs_config)"},{"path":"http://flare-forecast.org/FLAREr/reference/generate_states_to_obs_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map the states to the observations — generate_states_to_obs_mapping","text":"states_config list; list state configurations obs_config list; list observation configurations","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/generate_states_to_obs_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map the states to the observations — generate_states_to_obs_mapping","text":"updated states_config list","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/generate_states_to_obs_mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map the states to the observations — generate_states_to_obs_mapping","text":"Convert columns map states observations single vector.  necessary states observations, multiple states can contribute observation, one observation can associated multiple states. Function must assigned states_config object","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/generate_states_to_obs_mapping.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Map the states to the observations — generate_states_to_obs_mapping","text":"Quinn Thomas","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_driver_forecast_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file path for driver forecasts — get_driver_forecast_path","title":"Get file path for driver forecasts — get_driver_forecast_path","text":"Get file path driver forecasts","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_driver_forecast_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file path for driver forecasts — get_driver_forecast_path","text":"","code":"get_driver_forecast_path(config, forecast_model)"},{"path":"http://flare-forecast.org/FLAREr/reference/get_driver_forecast_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file path for driver forecasts — get_driver_forecast_path","text":"config flare configuration object forecast_model name forecast model (.e \"noaa/NOAAGEFS_1hr); path relative driver directory.","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_driver_forecast_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file path for driver forecasts — get_driver_forecast_path","text":"full path driver forecast","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_git_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data from Github repository — get_git_repo","title":"Get data from Github repository — get_git_repo","text":"Get data Github repository","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_git_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data from Github repository — get_git_repo","text":"","code":"get_git_repo(lake_directory, directory, git_repo)"},{"path":"http://flare-forecast.org/FLAREr/reference/get_git_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data from Github repository — get_git_repo","text":"lake_directory full path repository directory directory branch name github git_repo https github repository","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_restart_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Download restart file from s3 bucket — get_restart_file","title":"Download restart file from s3 bucket — get_restart_file","text":"Download restart file s3 bucket","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_restart_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download restart file from s3 bucket — get_restart_file","text":"","code":"get_restart_file(config, lake_directory)"},{"path":"http://flare-forecast.org/FLAREr/reference/get_restart_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download restart file from s3 bucket — get_restart_file","text":"config flare configuration object lake_directory full path repository directory","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_restart_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download restart file from s3 bucket — get_restart_file","text":"list updated configuration values","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_run_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Get run configuration from s3 bucket — get_run_config","title":"Get run configuration from s3 bucket — get_run_config","text":"Get run configuration s3 bucket","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_run_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get run configuration from s3 bucket — get_run_config","text":"","code":"get_run_config(   configure_run_file = \"configure_run.yml\",   lake_directory,   config,   clean_start = FALSE,   config_set_name = \"default\",   sim_name = NA )"},{"path":"http://flare-forecast.org/FLAREr/reference/get_run_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get run configuration from s3 bucket — get_run_config","text":"configure_run_file file name (path) run configuration file lake_directory full path repository directory config flare configuration object clean_start logical; reset configuration run base file configuration directory config_set_name name configuration set sim_name name simulation","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_run_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get run configuration from s3 bucket — get_run_config","text":"list configuration values","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Download target data from s3 — get_targets","title":"Download target data from s3 — get_targets","text":"Download target data s3","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/get_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download target data from s3 — get_targets","text":"","code":"get_targets(lake_directory, config)"},{"path":"http://flare-forecast.org/FLAREr/reference/get_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download target data from s3 — get_targets","text":"lake_directory full path repository directory config flare configuration object","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/initiate_model_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate model error matrix from configuration files — initiate_model_error","title":"Generate model error matrix from configuration files — initiate_model_error","text":"Generate model error matrix configuration files","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/initiate_model_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate model error matrix from configuration files — initiate_model_error","text":"","code":"initiate_model_error(config, states_config)"},{"path":"http://flare-forecast.org/FLAREr/reference/initiate_model_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate model error matrix from configuration files — initiate_model_error","text":"config list; list reading configuration yaml states_config list; list reading states configuration csv","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/initiate_model_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate model error matrix from configuration files — initiate_model_error","text":"matrix","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/initiate_model_error.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate model error matrix from configuration files — initiate_model_error","text":"Function uses configuration files generate matrix run_da_forecast use add normally distributed random noise model predictions","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/plotting_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate diagnostic plot of FLARE output with observations — plotting_general","title":"Generate diagnostic plot of FLARE output with observations — plotting_general","text":"Generate diagnostic plot FLARE output observations","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/plotting_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate diagnostic plot of FLARE output with observations — plotting_general","text":"","code":"plotting_general(forecast_df, targets_df, file_name, plots_directory)"},{"path":"http://flare-forecast.org/FLAREr/reference/plotting_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate diagnostic plot of FLARE output with observations — plotting_general","text":"forecast_df dataframe; data frame containing forecast predictions targets_df dataframe; data frame containing observations (targets) file_name string; name pdf file saved plots_directory full path directory plot saved","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/plotting_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate diagnostic plot of FLARE output with observations — plotting_general","text":"None","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/plotting_general.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate diagnostic plot of FLARE output with observations — plotting_general","text":"Function combines netcdf output long-format observation file produce set plots state variable, calibrated parameter, diagnostic variable","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/plotting_general.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate diagnostic plot of FLARE output with observations — plotting_general","text":"Austin Delany","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/put_restart_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload restart netcdf file to s3 bucket — put_restart_file","title":"Upload restart netcdf file to s3 bucket — put_restart_file","text":"Upload restart netcdf file s3 bucket","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/put_restart_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload restart netcdf file to s3 bucket — put_restart_file","text":"","code":"put_restart_file(saved_file, config)"},{"path":"http://flare-forecast.org/FLAREr/reference/put_restart_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload restart netcdf file to s3 bucket — put_restart_file","text":"saved_file full path saved FLARE netcdf config flare configuration object","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/put_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Save target files to s3 bucket — put_targets","title":"Save target files to s3 bucket — put_targets","text":"Save target files s3 bucket","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/put_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save target files to s3 bucket — put_targets","text":"","code":"put_targets(   site_id,   cleaned_insitu_file = NA,   cleaned_met_file = NA,   cleaned_inflow_file = NA,   use_s3 = FALSE,   config )"},{"path":"http://flare-forecast.org/FLAREr/reference/put_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save target files to s3 bucket — put_targets","text":"site_id four letter code site cleaned_insitu_file full path cleaned insitu file cleaned_met_file full path cleaned met file cleaned_inflow_file full path cleaned inflow file use_s3 logical; TRUE = use s3 config list FLARE configurations","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/run_da_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ensemble data assimilation and/or produce forecasts — run_da_forecast","title":"Run ensemble data assimilation and/or produce forecasts — run_da_forecast","text":"Run ensemble data assimilation /produce forecasts","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/run_da_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ensemble data assimilation and/or produce forecasts — run_da_forecast","text":"","code":"run_da_forecast(   states_init,   pars_init = NULL,   aux_states_init,   obs,   obs_sd,   model_sd,   working_directory,   met_file_names,   inflow_file_names = NULL,   outflow_file_names = NULL,   config,   pars_config = NULL,   states_config,   obs_config,   da_method = \"enkf\",   par_fit_method = \"perturb\",   obs_secchi = NULL,   obs_depth = NULL )"},{"path":"http://flare-forecast.org/FLAREr/reference/run_da_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run ensemble data assimilation and/or produce forecasts — run_da_forecast","text":"states_init array initial states.  Required dimensions [states, depths, ensemble] pars_init array initial states.  Required dimensions [pars, depths, ensemble].  (Default = NULL) aux_states_init list initial conditions auxillary states.  states GLM require restarting model included data assimilation.  states associated value model_sd. obs array; array observations. Required dimensions [nobs, time, depth] obs_sd vector; vector standard deviation observation model_sd vector vector standard deviations describing model error state working_directory string; full path directory model executes met_file_names vector; vector full path meteorology file names inflow_file_names vector matrix;; vector inflow file names outflow_file_names vector matrix; vector outflow file names config list; list configurations pars_config list; list parameter configurations  (Default = NULL) states_config list; list state configurations obs_config list; list observation configurations da_method string; data assimilation method (enkf pf; Default = enkf) par_fit_method string; method adding noise parameters calibration obs_secchi list secchi observations obs_depth list depth observations","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/run_da_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ensemble data assimilation and/or produce forecasts — run_da_forecast","text":"list","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/run_da_forecast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run ensemble data assimilation and/or produce forecasts — run_da_forecast","text":"Uses ensemble data assimilation predict water quality lake reservoir.  function requires initial conditions (states_init) state ensemble member using array following dimension order: states, depth, ensembles member.  fitting parameters, also requires initial conditions parameter ensemble member using array (par_init) following dimension order: parameters, ensemble member.  arrays states_init pars_init can created using generate_initial_conditions() function, starting initial conditions  states_config data frame observations first time column obs array.","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/run_flare.html","id":null,"dir":"Reference","previous_headings":"","what":"Run FLARE for a single forecast — run_flare","title":"Run FLARE for a single forecast — run_flare","text":"Run FLARE single forecast","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/run_flare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run FLARE for a single forecast — run_flare","text":"","code":"run_flare(   lake_directory,   configure_run_file,   config_set_name,   clean_start = FALSE,   sim_name = NA )"},{"path":"http://flare-forecast.org/FLAREr/reference/run_flare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run FLARE for a single forecast — run_flare","text":"lake_directory full path repository directory configure_run_file flare configuration object config_set_name directory within configuration/workflow run configuration files clean_start logical: TRUE = reset run configuration file configuration directory within repository sim_name sim_name use run FLARE find restart files. Deafult = NA (uses sim_name run_config) Set sim_name multiple simulations run config_set_name (e.g. scenario forecasting) rather modifying configuration/configure_run file time","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/run_flare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run FLARE for a single forecast — run_flare","text":"full path save netcdf file used restart following forecast","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/run_flare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run FLARE for a single forecast — run_flare","text":"Combines functions necessary complete execution FLARE","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/run_flare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run FLARE for a single forecast — run_flare","text":"","code":"if (FALSE) { # interactive() #Load and install dependencies library(dplyr) library(ggplot2) library(readr) library(lubridate) remotes::install_github(\"rqthomas/GLM3r\") Sys.setenv('GLM_PATH'='GLM3r')  dir <- normalizePath(tempdir(),  winslash = \"/\") lake_directory <- file.path(dir, \"extdata\") #Copy files to temporarly directory dir.create(dir,showWarnings = FALSE) file.copy(system.file(\"extdata\", package = \"FLAREr\"),           tempdir(),           recursive = TRUE) run_flare(lake_directory = lake_directory,           configure_run_file = \"configure_run.yml\",           config_set_name = \"default\") open_dataset(file.path(lake_directory,\"forecasts/parquet\")) |>   filter(variable == \"temperature\",         depth == 1) |>  collect() |>  ggplot(aes(x = datetime, y = prediction, group = parameter)) +  geom_line() +  geom_vline(aes(xintercept = as_datetime(reference_datetime))) +  labs(title = \"1 m water temperature forecast\")  }"},{"path":"http://flare-forecast.org/FLAREr/reference/set_up_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Set and create directories in the configuration file — set_up_simulation","title":"Set and create directories in the configuration file — set_up_simulation","text":"Set create directories configuration file","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/set_up_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set and create directories in the configuration file — set_up_simulation","text":"","code":"set_up_simulation(   configure_run_file = \"configure_run.yml\",   lake_directory,   clean_start = FALSE,   config_set_name = \"default\",   sim_name = NA )"},{"path":"http://flare-forecast.org/FLAREr/reference/set_up_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set and create directories in the configuration file — set_up_simulation","text":"configure_run_file name run configuration file (include full path) lake_directory full path repository directory clean_start logical: TRUE = reset run configuration file configuration directory within repository config_set_name name configuration set sim_name name simulation","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/set_up_simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set and create directories in the configuration file — set_up_simulation","text":"list configuration values (Invisibly); side effect creating necessary subdirectories lake_directory","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/set_up_simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set and create directories in the configuration file — set_up_simulation","text":"","code":"dir <- normalizePath(tempdir(),  winslash = \"/\") lake_directory <- file.path(dir, \"extdata\") # Copy files to temporarly directory dir.create(dir,showWarnings = FALSE) file.copy(system.file(\"extdata\", package = \"FLAREr\"),           tempdir(),           recursive = TRUE) #> [1] TRUE  set_up_simulation(configure_run_file = \"configure_run.yml\",                   lake_directory = lake_directory,                    clean_start = FALSE,                    config_set_name = \"default\",                    sim_name = NA) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion"},{"path":"http://flare-forecast.org/FLAREr/reference/update_run_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Update run configuration — update_run_config","title":"Update run configuration — update_run_config","text":"Update run configuration","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/update_run_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update run configuration — update_run_config","text":"","code":"update_run_config(   lake_directory,   configure_run_file,   restart_file,   start_datetime,   end_datetime,   forecast_start_datetime,   forecast_horizon,   sim_name,   site_id,   configure_flare,   configure_obs,   use_s3,   bucket,   endpoint,   use_https = TRUE )"},{"path":"http://flare-forecast.org/FLAREr/reference/update_run_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update run configuration — update_run_config","text":"lake_directory full path repository directory configure_run_file name run configuration file (include full path) restart_file full path saved FLARE netcdf start_datetime first datetime simulation end_datetime last datetime simulation forecast_start_datetime datetime forecast starts forecast_horizon number days forecasted sim_name name particular FLARE simulation site_id four letter code site configure_flare list FLARE configurations configure_obs list observation configurations use_s3 logical; TRUE = use s3 bucket s3 bucket endpoint s3 endpoint use_https TRUE/FALSE use https using s3","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/update_run_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update run configuration — update_run_config","text":"","code":"dir <- normalizePath(tempdir(),  winslash = \"/\") lake_directory <- file.path(dir, \"extdata\") #Copy files to temporarly directory dir.create(dir,showWarnings = FALSE) file.copy(system.file(\"extdata\", package = \"FLAREr\"),           tempdir(),           recursive = TRUE) #> [1] TRUE print(lake_directory) #> [1] \"/tmp/RtmpcbfXPy/extdata\" dir.create(file.path(lake_directory, \"restart/fcre/test\"),            recursive = TRUE,            showWarnings = FALSE) file.copy(file.path(lake_directory, \"configuration/default/configure_run.yml\"),           file.path(lake_directory, \"restart/fcre/test/configure_run.yml\"),           overwrite = TRUE) #> [1] TRUE update_run_config(lake_directory,                   configure_run_file = \"configure_run.yml\",                   restart_file = NA,                   start_datetime = \"2022-10-01 00:00:00\",                   end_datetime = NA,                   forecast_start_datetime = \"2022-10-10 00:00:00\",                   forecast_horizon = 20,                   sim_name = \"test\",                   site_id = \"fcre\",                   configure_flare = \"configure_flare.yml\",                   configure_obs = NULL,                   use_s3 = FALSE,                   bucket = NULL,                   endpoint = NULL)"},{"path":"http://flare-forecast.org/FLAREr/reference/write_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate parquet output file — write_forecast","title":"Generate parquet output file — write_forecast","text":"Generate parquet output file","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/write_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate parquet output file — write_forecast","text":"","code":"write_forecast(   da_forecast_output,   use_s3 = FALSE,   bucket = NULL,   endpoint = NULL,   local_directory = NULL )"},{"path":"http://flare-forecast.org/FLAREr/reference/write_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate parquet output file — write_forecast","text":"da_forecast_output list; object returned run_da_forecast() use_s3 Boolen; use s3 storage saving scores bucket S3 bucket endpoint S3 endpoint local_directory local directory scores using s3","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/write_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate parquet output file — write_forecast","text":"None","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/write_forecast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate parquet output file — write_forecast","text":"Function generates parquet file object returned run_da_forecast()","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/write_forecast.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate parquet output file — write_forecast","text":"Quinn Thomas","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/write_restart.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate netcdf restart file — write_restart","title":"Generate netcdf restart file — write_restart","text":"Generate netcdf restart file","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/write_restart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate netcdf restart file — write_restart","text":"","code":"write_restart(   da_forecast_output,   forecast_output_directory,   use_short_filename = TRUE )"},{"path":"http://flare-forecast.org/FLAREr/reference/write_restart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate netcdf restart file — write_restart","text":"da_forecast_output list; object returned run_da_forecast() forecast_output_directory string; full path directory netcdf file written use_short_filename use shortened file name; results less informatoin file name potentially overwriting existing files","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/write_restart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate netcdf restart file — write_restart","text":"None","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/write_restart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate netcdf restart file — write_restart","text":"Function generates netcdf file object returned run_da_forecast()","code":""},{"path":"http://flare-forecast.org/FLAREr/reference/write_restart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate netcdf restart file — write_restart","text":"Quinn Thomas","code":""},{"path":"http://flare-forecast.org/FLAREr/news/index.html","id":"flarer-300","dir":"Changelog","previous_headings":"","what":"FLAREr 3.0.0","title":"FLAREr 3.0.0","text":"New particle filter data assimilation method Able one parameter set parameters share name (e.g., temperature one three sediment zones) Able assimilate depth secchi depth Separate inflow outflow models Openmeteo API option meteorological inputs Updates restart capacity now requires GLM-AED version 3.4 higher Access daily summaries (e.g., lake.csv) GLM-AED FLAREr output Flexible paths directory partitioning driver files. Uses glue::glue create path internal variables. Capacity save subdaily statistics (like max temperature depth mean co2 flux)","code":""},{"path":"http://flare-forecast.org/FLAREr/news/index.html","id":"flarer-301","dir":"Changelog","previous_headings":"","what":"FLAREr 3.0.1","title":"FLAREr 3.0.1","text":"Fix bug check_noaa_ready() assumed specific value future_met_model Fixes testing suite","code":""},{"path":"http://flare-forecast.org/FLAREr/news/index.html","id":"flarer-302","dir":"Changelog","previous_headings":"","what":"FLAREr 3.0.2","title":"FLAREr 3.0.2","text":"Fixed bug associated daily diagnostics depths defaulted logical depth values NA Fixed bug associated plotting daily diagnostics","code":""},{"path":"http://flare-forecast.org/FLAREr/news/index.html","id":"flarer-302-1","dir":"Changelog","previous_headings":"","what":"FLAREr 3.0.2","title":"FLAREr 3.0.2","text":"Added sim_name option run_flare() support scenario based forecasting workflows.","code":""}]
